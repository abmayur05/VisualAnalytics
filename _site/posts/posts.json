[
  {
    "path": "posts/2021-05-26-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "A makeover of merchandise trade of Singapore with its top six trading partners for the year 2019-2020.",
    "author": [
      {
        "name": "Mayurapriyann Arulmozhi Baskaran",
        "url": "https://www.linkedin.com/in/mayurapriyann/"
      }
    ],
    "date": "2021-05-30",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1.0 Critique of Visualisation\r\n1.1 Clarity\r\n1.2 Aesthetics\r\n\r\n2.0 Alternative Design\r\n2.1 Clarity\r\n2.2 Aesthetics\r\n\r\n3.0 Proposed Visualisation\r\n4.0 Step-by-step Guide\r\n5.0 Derived Insights\r\n\r\n1.0 Critique of Visualisation\r\nThe original visualization can be seen below.\r\n\r\nFigure 1: Given visualization\r\n1.1 Clarity\r\nThe title of the chart says that the chart represents merchandise trade of the top six trading countries from 2019 to 2020. But most of the sub-charts have years ranging from 2019 to 2021. Moreover, the chart corresponding to Japan has only the year 2020 in its x-axis. In addition, the title just states the top six trading countries but whether these are the top six trading countries in the world or the top six trading countries with Singapore is not clear to the reader.\r\nThe y-axis scale for all 6 different countries is not consistent. The chart represents China and Japan to have similar export and import trends, in-fact Japan’s trade seems to be more than that of China but having a closer look at the y-axis reveals that China’s scale is from 0M-8M whereas Japan’s scale is only from 0M-2M. So all axis of the countries should be consistent with each otherand also the dual-axis present in the y-axis should be synchronized as they represent exports and imports of the same country.\r\nThe x-axis is labeled as ‘Month of Period’ but the x-axis tick mark values correspond to year and not the month.\r\nUnit of measurement is nowhere mentioned in the graph. Since there are six different countries with different currencies, it is important to mention the unit of measurement.\r\nThe source of the chart is not present.\r\nArea chart is mostly preferred only to show how parts of a whole change over time. From our area chart, it is very hard to infer any insights. It is always recommended to avoid using a classic area chart as it is too confusing.\r\n1.2 Aesthetics\r\nThe use of colors to distinguish exports and imports is too pale. And since most of the sub-charts have overlapping of the two colors, it is very hard to understand. Brighter and distinct coloration is always preferred.\r\nThe font size of the main title for the chart is smaller than the other secondary titles such as the country names in the chart.\r\nTick marks are not present in the y-axis. Tick marks are necessary on a continuous scale.\r\nThe secondary headers such as country names present in the chart are left-aligned. And since there are no gridlines, at times it gets confusing.\r\nAnnotations are not used to convey the key insights, leaving the reader to infer the purpose of the chart.\r\n2.0 Alternative Design\r\nThe proposed design is as follows.\r\n\r\nFigure 2: Proposed Sketch\r\n2.1 Clarity\r\nThe x-axis of all the countries has the same year range as mentioned in the main title of the chart.\r\nThe area chart is replaced by a stacked bar chart which gives the overall picture of the total trade as well as the exports and imports value in the corresponding year.\r\nLine chart is used on top of the stacked bar chart to show the rate of increase/decrease in trade value from that of the previous year. The percentage increase/decrease is also displayed in the chart to quantify the rate of change.\r\nAll six countries share the same y-axis so that it will be easy to compare and draw insights.\r\nLink to the source and raw data are provided at the bottom of the chart.\r\nUnit of measurement is clearly mentioned in the y-axis as there are different countries using different currencies.\r\nThe raw data excel file has a scale of thousand dollars so all the values are multiplied by 1000 to get the actual value of exports and imports.\r\n2.2 Aesthetics\r\nIn the y-axis, tick marks are added since the values are on a continuous scale. In addition, the tick marks were also changed to black color to make them visible to the naked eye.\r\nSoft and natural colors are used to distinguish export and import.\r\nGrid lines are used to separate six different countries.\r\nAnnotations are used to emphasize key observations.\r\nNumbers with too many digits are always difficult to interpret for the readers, hence all the values are converted to billions for easy reference.\r\n3.0 Proposed Visualisation\r\nPlease view the interactive visualization on Tableau Public here.\r\n4.0 Step-by-step Guide\r\nImport the excel sheet(outputFile.xlsx) into Tableau Prep builder. The first five rows in the excel sheet contains non tabular data which needs to be excluded.\r\n\r\nFigure 3: Raw Excel Sheet\r\nCheck the ‘Data Interpreter’ check box to handle this issue. It is designed to help identify the structure of the data in excel file and turn it into a proper format.\r\n\r\nFigure 4: Data Interpreter\r\nRename the first sheet T1 as ‘Imports’ and add the ‘Clean step’ to the flow.\r\n\r\nFigure 5: Clean Step\r\nThe data table which was cleaned by data interpreter is displayed as shown below.\r\n\r\nFigure 6: Table After Cleaning\r\nIf you can notice, the first five rows are removed and correct table header is assigned automatically.\r\nThe country names are listed under column ‘Variables’. But since we are interested in only the 6 countries given in the visualization, use the filter function next to the ‘Variables’ column to filter out the 6 countries.\r\n\r\nFigure 7: Filter Values Dialog Box\r\nSince we are interested only in the year 2019-2020, drop all the other data range by selecting the desired date range and clicking on ‘Remove Field’.\r\n\r\nFigure 8: Selecting Multiple Columns\r\nRepeat the steps 1-4 for the second sheet T2 and rename the sheet to ‘Exports’.\r\nThe output table got is in wide format. Each month corresponding to the year is listed as separate measure as shown below. Wide format is not suitable for analysis, hence wide format has to be transformed to long format.\r\n\r\nFigure 9: Measure Values\r\n\r\nFigure 10: Wide Format Columns\r\nHence, after clean step add pivot step to convert wide format to long format and rename the columns as shown below.\r\n\r\nFigure 11: Pivot Columns to Rows\r\n\r\nFigure 12: Long Format Columns\r\nAfter pivoting and renaming the columns, both the sheets are saved into separate excel sheets namely ‘Imports.xlsx’ and ‘Exports.xlsx’.\r\n\r\nFigure 13: Final Flow Diagram\r\nNow import both the sheets into Tableau. The pull any one of the tables to the canvas and double click on the table to open the join canvas (physical layer).\r\n\r\nFigure 14: Imports Table In Tableau\r\nDrag another table to the join canvas.\r\n\r\nFigure 15: Inner Join Imports And Exports\r\nAs ‘Country’ and ‘Date’ columns are common to both the tables, we can use an inner join to join both the tables as shown in the screenshot. The final table after joining both the tables is shown below.\r\n\r\nFigure 16: Table After Inner Join\r\nNow date column and country column of any one of the tables is retained as both will have the same value. Country column is split with ‘(‘ as delimiter to retain only the country names.\r\n\r\nFigure 17: Custom Split\r\nDate column has data type as string. It has to be changed to date data type. The final table looks like below.\r\n\r\nFigure 18: Columns After Custom Split And Data Type Change\r\nThe scale in the raw data file is in thousand dollars, so both the ‘Import Amount’ and ‘Export Amount’ are to be multiplied by 1000 to get the actual value of imports and exports.\r\n\r\nFigure 19: Derived Column Import (SGD)\r\nThe new calculated columns are named as ‘Import (SGD)’ and ‘Export (SGD)’.\r\nA calculated column ‘Total Trade (SGD)’ is obtained by summing both the ‘Import (SGD)’ and ‘Export (SGD)’.\r\n\r\nFigure 20: Derived Column Total Trade\r\nDrag ‘Country’ and ‘Date’ to columns pane.\r\n\r\nFigure 21: Columns Pane\r\nDrag ‘Measure Values’ to rows pane.\r\n\r\nFigure 22: Rows Pane\r\n‘Measure Values’ consists of 6 values as shown below.\r\n\r\nFigure 23: Measure Values Content\r\nRemove ‘CNT(Imports)’ , ‘SUM(Export Amount)’, ‘SUM(Import (Amount)’ and ‘SUM(Total Trade (SGD))’ from the ‘Measure Values’ column. The chart looks like below.\r\n\r\nFigure 24: Bar Chart\r\nNow drag and drop ‘Measure Names’ on color icon under the ‘Marks’ box. Under color icon click on ‘Edit colors’ and select the desired colors.\r\n\r\nFigure 25: Marks Pane\r\nThe stacked bar chart is ready as shown below.\r\n\r\nFigure 26: Stacked Bar Chart\r\nNow the derived column, ‘Total Trade (SGD)’ is dragged to column pane.\r\n\r\nFigure 27: Rows And Columns Pane\r\nRight click on the ‘Total Trade’ chart’s y-axis and click on the ‘Dual Axis’.\r\n\r\nFigure 28: Dual Axis\r\nNow the ‘Total Trade’ bar chart overlaps the stacked bar chart as the dual axis are in the same scale. Since both the axis are same, hide the y-axis present towards the right as it might confuse the readers.\r\n\r\nFigure 29: Edit Axis\r\nClick on the dropdown symbol next to ‘SUM(Total Trade (SGD)’ and change the chart type from bar to line.\r\n\r\nFigure 30: Change Chart Type\r\nNow drag the ‘Total Trade (SGD)’ column onto ‘Label’ icon. Total sum of the trade corresponding to that year is displayed on all the bars.\r\n\r\nFigure 31: Add Labels\r\nClick the dropdown next to ‘SUM(Total Trade (SGD))’ label and select ‘Percent Difference’ from ‘Quick Table Calculation’.\r\n\r\nFigure 32: Calculate Percentage Difference\r\nClick on the ‘Add Table Calculation’ and select ‘Pane (Across)’ under compute method.\r\n\r\nFigure 33: Add Table Calculation\r\nMake the tick marks in the y-axis visible to naked eye since it is on a continuous scale.\r\nRight click on the white space in the chart and click on ‘Annotate’ to add annotations to highlight key insights.\r\n\r\nFigure 34: Add Annotations\r\nThe final chart is ready after adding title, axis labels and captions.\r\n\r\nFigure 35: Final Visualization\r\n5.0 Derived Insights\r\nOut of the top six trading partners of Singapore, Mainland China has the highest merchandise trade value of S$137.31 billion and S$136.2 billion for the years 2019 and 2020 respectively.\r\nExcept for Taiwan and Hong Kong, the total trade value of the remaining four countries decreased in the year 2020 from that of the previous year.\r\nMalaysia had the steepest fall of 8.46% in total trade value in the year 2020 from that of the previous year whereas, on the other hand, Taiwan witnessed the highest increase of 13.04% in the total trade value from that of the previous year.\r\nThe value of import for Singapore’s trade with Hong Kong only contributes less than 8% in both the years 2019 and 2020 of the total trade.\r\n\r\nFigure 36: Final Visualization With Highlights\r\n\r\nThis was written as part of requirements for the Visual Analytics course offered by MITB.\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-05-28T13:20:06+08:00",
    "input_file": "dataviz-makeover-1.knit.md"
  },
  {
    "path": "posts/2021-05-23-my-1st-post/",
    "title": "My 1st Post",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Mayur",
        "url": "https://example.com/mayur"
      }
    ],
    "date": "2021-05-23",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nIn this article, we will show you how to plot a figure with multiple histograms by using ggplot2 and ggpubr packages.\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\n\r\nTo insert a graph.\r\n\r\nNext, you will use the code chunk below to install and launch ggpubr and tidyverse in RStudio.\r\nR code\r\npackages = c(‘ggpubr’, ‘tidyverse’)\r\nfor(p in packages){library if(!require(p, character.only = T)){ install.packages(p) } library(p, character.only = T) }\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\nR code\r\nwine <- read_csv(“data/wine_quality.csv”)\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted by using ggplot() and geom_histogram() of ggplot2 package. Then, ggarrange() of ggpubr package is used to patch these histogram into a single figure to reveal the distribution of the selected variables in the wine quality data sets.\r\nRcode\r\nfa <- ggplot(data=wine, aes(x= fixed acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) va <- ggplot(data=wine, aes(x= volatile acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ca <- ggplot(data=wine, aes(x= citric acid)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) rs <- ggplot(data=wine, aes(x= residual sugar)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ch <- ggplot(data=wine, aes(x= chlorides)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) fSO2 <- ggplot(data=wine, aes(x= free sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) tSO2 <- ggplot(data=wine, aes(x= total sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) density <- ggplot(data=wine, aes(x= density)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) pH <- ggplot(data=wine, aes(x= pH)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) sulphates <- ggplot(data=wine, aes(x= sulphates)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) alcohol <- ggplot(data=wine, aes(x= alcohol)) + geom_histogram(bins=20, color=“black”, fill=“light blue”)\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-05-23T20:24:18+08:00",
    "input_file": {}
  }
]
